AWSTemplateFormatVersion: '2010-09-09'
Description: Creates additional databases in Redshift Serverless

# Parameters:
#   WorkgroupName:
#     Type: String
#     Description: Name of the Redshift Serverless workgroup
#   NamespaceName:
#     Type: String
#     Description: Name of the Redshift Serverless namespace
#   EnvType:
#     Type: String
#     Description: Environment type
#   DatabaseUser:
#     Type: String
#     Description: Database User Name
#   DatabasePassword:
#     Type: String
#     Description: Database Password


Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: RedshiftDataAPI
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - redshift-data:ExecuteStatement
                  - redshift-data:DescribeStatement
                Resource: '*'

  CreateDatabasesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Handler: index.handler
      Timeout: 300
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json
          
          def lambda_handler(event, context):
            # Return a simple message as a response# Return a simple message as a response
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello')
              }            

  CreateDatabases:
    Type: Custom::CreateDatabases
    DependsOn: CreateDatabasesFunction
    Properties:
      ServiceToken: !GetAtt CreateDatabasesFunction.Arn
      # WorkgroupName: !Ref WorkgroupName
      # NamespaceName: !Ref NamespaceName
      # EnvType: !Ref EnvType
      # DatabaseUser: !Ref DatabaseUser
      # DatabasePassword: !Ref DatabasePassword

Outputs:
  DatabasesCreated:
    Description: Indicates that databases were created
    Value: 'Databases creation process completed'
